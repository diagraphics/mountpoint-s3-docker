load_module modules/ngx_http_js_module.so;

# Specify which env vars to inherit
env AWS_REGION;
env AWS_SERVICE;
env AWS_ACCESS_KEY_ID;
env AWS_SECRET_ACCESS_KEY;
env AWS_UPSTREAM_HOST;

# Run worker processes based on available CPU cores
worker_processes auto;

# Required events section
events {
    worker_connections 1024;  # Default value - adjust as needed
}

http {
    # Import the NJS script
    js_import aws_proxy from /etc/nginx/njs/aws_sig_v4.js;

    # Send logs to stdout
    access_log /dev/stdout;

    error_log stderr info;

    server {
        listen 54321;

        # We need to get the upstream host dynamically
        location / {
            # Generate the new Authorization header
            js_set $new_auth_header aws_proxy.generateNewAuthHeader;

            # Set headers for the upstream request
            proxy_set_header Authorization $new_auth_header;
            proxy_set_header Host ${AWS_UPSTREAM_HOST};

            # Explicitly pass all headers
            proxy_pass_request_headers on;
            proxy_pass_request_body on;

            proxy_pass ${AWS_UPSTREAM_PROTOCOL}://${AWS_UPSTREAM_HOST};
            proxy_ssl_server_name on;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # Set max body size
            client_max_body_size 200M;
        }
    }

    server {
        listen 80;

        location /healthz {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
}